plugins {
    id 'java'
    id 'idea'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.node-gradle.node' version '2.2.4'
    id 'net.ltgt.apt' version '0.21'
    id 'net.researchgate.release' version '2.8.1'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group 'org.motechproject.mots'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/" }
    maven { url "http://jasperreports.sourceforge.net/maven2/" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.1.RELEASE'
    implementation 'org.springframework.security:spring-security-jwt'
    implementation 'mysql:mysql-connector-java'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'commons-io:commons-io:2.7'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'net.sf.jasperreports:jasperreports:6.13.0'
    implementation 'net.sf.supercsv:super-csv:2.4.0'
    implementation 'org.mapstruct:mapstruct-jdk8:1.3.1.Final'

    compileOnly 'org.projectlombok:lombok:1.18.12'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

processResources {
    filesMatching("**/application.yml") {
        expand(project.properties)
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

node {
    version = '6.11.4'
    npmVersion = '3.10.10'
    download = true
}

wrapper {
    gradleVersion = '6.5.1'
}

checkstyle {
    toolVersion '8.34'
    configFile = file("checkstyle.xml")
    maxWarnings = 0
}

pmd {
    toolVersion = '6.25.0'
    consoleOutput = true
    ignoreFailures = false
    ruleSets = []
    ruleSetFiles = files("ruleset.xml")
    reportsDir = file("build/reports/pmd")
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/.bin/webpack')
}

task webpackWatch(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/.bin/webpack')
    args = ['--watch']
}

task webpackProduction(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/.bin/webpack')
    args = ['-p']
}

bootJar.dependsOn 'webpackProduction'
bootRun.dependsOn 'webpack'

apply from: 'liquibase.gradle'
